<ResourceDictionary
    x:Class="ArnoldVinkCode.Styles.ListBoxAccent"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--ListBox Templates-->
    <ControlTemplate x:Key="ListBoxVerticalTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerVertical}">
            <StackPanel IsItemsHost="True" Orientation="Vertical"/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxVerticalNoScrollTemplate" TargetType="ListBox">
        <StackPanel IsItemsHost="True" Orientation="Vertical"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxHorizontalTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerHorizontal}">
            <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxHorizontalNoScrollTemplate" TargetType="ListBox">
        <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxWrapPanelTemplateVertical" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerVertical}">
            <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxWrapPanelTemplateHorizontal" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerHorizontal}">
            <WrapPanel IsItemsHost="True" Orientation="Vertical"/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxUniformGridTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerVertical}">
            <UniformGrid IsItemsHost="True"/>
        </ScrollViewer>
    </ControlTemplate>

    <!--ListBoxItem Template White-->
    <ControlTemplate x:Key="ListBoxItemTemplateWhite" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="0.50"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationWhiteBrush}"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </Trigger>
            <EventTrigger RoutedEvent="PreviewMouseUp">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation From="#5AF1F1F1" To="Transparent" Duration="0:0:0.5" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Color)"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="PreviewKeyUp">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation From="#5AF1F1F1" To="Transparent" Duration="0:0:0.5" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Color)"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationAccentDarkBrush}"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationWhiteBrush}"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ListBoxItem Template Black-->
    <ControlTemplate x:Key="ListBoxItemTemplateBlack" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="0.50"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationBlackBrush}"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </Trigger>
            <EventTrigger RoutedEvent="PreviewMouseUp">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation From="#5AF1F1F1" To="Transparent" Duration="0:0:0.5" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Color)"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="PreviewKeyUp">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation From="#5AF1F1F1" To="Transparent" Duration="0:0:0.5" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Color)"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationAccentDarkBrush}"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationBlackBrush}"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ListBoxItem Template Color -->
    <ControlTemplate x:Key="ListBoxItemTemplateColor" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Border x:Name="borderAnimation" Background="Transparent">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="0.50"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationWhiteBrush}"/>
                <Setter Property="Background" TargetName="border" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <EventTrigger RoutedEvent="PreviewMouseUp">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation From="#5AF1F1F1" To="Transparent" Duration="0:0:0.5" Storyboard.TargetName="borderAnimation" Storyboard.TargetProperty="(Border.Background).(Color)"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="PreviewKeyUp">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation From="#5AF1F1F1" To="Transparent" Duration="0:0:0.5" Storyboard.TargetName="borderAnimation" Storyboard.TargetProperty="(Border.Background).(Color)"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationAccentDarkBrush}"/>
                <Setter Property="Background" TargetName="border" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationWhiteBrush}"/>
                <Setter Property="Background" TargetName="border" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>