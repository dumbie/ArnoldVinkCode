<ResourceDictionary
    x:Class="ArnoldVinkCode.Styles.ControlTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--ListBox Templates-->
    <ControlTemplate x:Key="ListBoxVerticalTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerVertical}">
            <StackPanel IsItemsHost="True" Orientation="Vertical"/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxVerticalNoScrollTemplate" TargetType="ListBox">
        <StackPanel IsItemsHost="True" Orientation="Vertical"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxHorizontalTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerHorizontal}">
            <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxHorizontalNoScrollTemplate" TargetType="ListBox">
        <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxWrapPanelTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerVertical}">
            <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxUniformGridTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerVertical}">
            <UniformGrid IsItemsHost="True"/>
        </ScrollViewer>
    </ControlTemplate>

    <!--Button Template White-->
    <ControlTemplate x:Key="ButtonTemplateWhite" TargetType="{x:Type Button}">
        <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#F1F1F1"/>
                <Setter Property="Background" TargetName="border" Value="#30F1F1F1"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#F1F1F1"/>
                <Setter Property="Background" TargetName="border" Value="#30F1F1F1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#F1F1F1"/>
                <Setter Property="Background" TargetName="border" Value="#60F1F1F1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.50"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Button Template Black-->
    <ControlTemplate x:Key="ButtonTemplateBlack" TargetType="{x:Type Button}">
        <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#1D1D1D"/>
                <Setter Property="Background" TargetName="border" Value="#301D1D1D"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#1D1D1D"/>
                <Setter Property="Background" TargetName="border" Value="#301D1D1D"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#1D1D1D"/>
                <Setter Property="Background" TargetName="border" Value="#601D1D1D"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.50"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Button Template Transparent-->
    <ControlTemplate x:Key="ButtonTemplateTransparent" TargetType="{x:Type Button}">
        <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
    </ControlTemplate>

    <!--ListBoxItem Template White-->
    <ControlTemplate x:Key="ListBoxItemTemplateWhite" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="0.50"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#F1F1F1"/>
                <Setter Property="Background" TargetName="border" Value="#30F1F1F1"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationAccentDarkBrush}"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationAccentLightBrush}"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ListBoxItem Template Black-->
    <ControlTemplate x:Key="ListBoxItemTemplateBlack" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="0.50"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#1D1D1D"/>
                <Setter Property="Background" TargetName="border" Value="#301D1D1D"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationAccentDarkBrush}"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ApplicationAccentLightBrush}"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>